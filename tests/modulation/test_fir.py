from typing import TYPE_CHECKING

import numpy as np

from pyautd3 import Controller, Segment
from pyautd3.driver.defined.freq import Hz
from pyautd3.modulation import Sine
from pyautd3.modulation.fir import Fir
from pyautd3.modulation.fourier import Fourier, FourierOption
from pyautd3.modulation.sine import SineOption
from tests.test_autd import create_controller

if TYPE_CHECKING:
    from pyautd3.link.audit import Audit


def test_fir():
    autd: Controller[Audit]
    with create_controller() as autd:
        m = Fir(
            target=Fourier(components=[Sine(freq=50 * Hz, option=SineOption()), Sine(freq=1000 * Hz, option=SineOption())], option=FourierOption()),
            coef=[
                0.0,
                2.336_732_5e-6,
                8.982_681e-6,
                1.888_706_2e-5,
                3.030_097e-5,
                4.075_849e-5,
                4.708_182e-5,
                4.542_212e-5,
                3.134_882_4e-5,
                0.0,
                -5.369_572_3e-5,
                -0.000_134_718_74,
                -0.000_247_578_05,
                -0.000_395_855_98,
                -0.000_581_690_7,
                -0.000_805_217_2,
                -0.001_063_996,
                -0.001_352_463_7,
                -0.001_661_447_3,
                -0.001_977_784_6,
                -0.002_284_095_4,
                -0.002_558_745,
                -0.002_776_031,
                -0.002_906_624_2,
                -0.002_918_272_5,
                -0.002_776_767_4,
                -0.002_447_156_7,
                -0.001_895_169_7,
                -0.001_088_802_4,
                0.0,
                0.001_393_638_8,
                0.003_107_224_6,
                0.005_147_092_5,
                0.007_509_561,
                0.010_180_013,
                0.013_132_379,
                0.016_329_063,
                0.019_721_36,
                0.023_250_382,
                0.026_848_452,
                0.030_440_966,
                0.033_948_626,
                0.037_290_003,
                0.040_384_263,
                0.043_154_005,
                0.045_528_06,
                0.047_444_11,
                0.048_851_013,
                0.049_710_777,
                0.05,
                0.049_710_777,
                0.048_851_013,
                0.047_444_11,
                0.045_528_06,
                0.043_154_005,
                0.040_384_263,
                0.037_290_003,
                0.033_948_626,
                0.030_440_966,
                0.026_848_452,
                0.023_250_382,
                0.019_721_36,
                0.016_329_063,
                0.013_132_379,
                0.010_180_013,
                0.007_509_561,
                0.005_147_092_5,
                0.003_107_224_6,
                0.001_393_638_8,
                0.0,
                -0.001_088_802_4,
                -0.001_895_169_7,
                -0.002_447_156_7,
                -0.002_776_767_4,
                -0.002_918_272_5,
                -0.002_906_624_2,
                -0.002_776_031,
                -0.002_558_745,
                -0.002_284_095_4,
                -0.001_977_784_6,
                -0.001_661_447_3,
                -0.001_352_463_7,
                -0.001_063_996,
                -0.000_805_217_2,
                -0.000_581_690_7,
                -0.000_395_855_98,
                -0.000_247_578_05,
                -0.000_134_718_74,
                -5.369_572_3e-5,
                0.0,
                3.134_882_4e-5,
                4.542_212e-5,
                4.708_182e-5,
                4.075_849e-5,
                3.030_097e-5,
                1.888_706_2e-5,
                8.982_681e-6,
                2.336_732_5e-6,
                0.0,
            ],
        )

        autd.send(m)

        for dev in autd.geometry():
            mod = autd.link().modulation_buffer(dev.idx(), Segment.S0)
            mod_expect = [
                127,
                131,
                136,
                140,
                145,
                149,
                153,
                157,
                161,
                164,
                168,
                171,
                173,
                176,
                178,
                180,
                182,
                183,
                184,
                184,
                184,
                184,
                184,
                183,
                182,
                180,
                178,
                176,
                173,
                171,
                168,
                164,
                161,
                157,
                153,
                149,
                145,
                140,
                136,
                131,
                127,
                122,
                118,
                113,
                109,
                105,
                100,
                96,
                93,
                89,
                86,
                83,
                80,
                77,
                75,
                73,
                72,
                70,
                70,
                69,
                69,
                69,
                70,
                70,
                72,
                73,
                75,
                77,
                80,
                83,
                86,
                89,
                93,
                96,
                100,
                105,
                109,
                113,
                118,
                122,
            ]
            assert np.array_equal(mod, mod_expect)
            assert autd.link().modulation_frequency_division(dev.idx(), Segment.S0) == 10
